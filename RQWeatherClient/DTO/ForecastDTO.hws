@INCLUDE "../../JSONLib/JSONLib.hws"
@INCLUDE "CityDTO.hws"
@INCLUDE "DailyForecastDTO.hws"
@INCLUDE "DailyForecastAggregateDTO.hws"

Const #K_FC_CODE_KEY = "code"
Const #K_FC_COUNT_KEY = "count"
Const #K_FC_LIST_KEY = "list"
Const #K_FC_CITY_KEY = "city"
Const #K_FC_AGG_KEY = "aggregates"

Global ForecastDTO = {}
ForecastDTO.code = 0
ForecastDTO.count = 0
ForecastDTO.list = {}
ForecastDTO.city = {}
ForecastDTO.aggregates = {}

Function ForecastDTO:New()
    Return (CopyTable(self))
EndFunction

Function ForecastDTO:_populateList(inTable, instance)
    Local result = DailyForecastDTO:LoadFromTable(inTable)
    InsertItem(instance.list, result)
EndFunction

Function ForecastDTO:_populateAggs(inTable, instance)
    Local result = DailyForecastAggregateDTO:LoadFromTable(inTable)
    InsertItem(instance.aggregates, result)
EndFunction

Function ForecastDTO:LoadFromTable(inTable)
    Local instance = ForecastDTO:New()

    If (IsNil(inTable) Or IsTableEmpty(inTable))
        Return (instance)
    EndIf

    If (HaveItem(inTable, #K_FC_CODE_KEY))
        instance.code = inTable.code
    EndIf

    If (HaveItem(inTable, #K_FC_COUNT_KEY))
        instance.count = inTable.count
    EndIf

    If (HaveItem(inTable, #K_FC_LIST_KEY))
        If Not IsNil(inTable.list) And Not IsTableEmpty(inTable.list)
			Local n, i = NextItem(inTable.list)
			While GetType(n) <> #NIL
        		self:_populateList(i, instance)
				n, i = NextItem(inTable.list, n)
			Wend
		EndIf
    EndIf

    If (HaveItem(inTable, #K_FC_CITY_KEY))
        instance.city = CityDTO:LoadFromTable(inTable.city)
    EndIf

    If (HaveItem(inTable, #K_FC_AGG_KEY))
        If Not IsNil(inTable.aggregates) And Not IsTableEmpty(inTable.aggregates)
			Local n, i = NextItem(inTable.aggregates)
			While GetType(n) <> #NIL
        		self:_populateAggs(i, instance)
				n, i = NextItem(inTable.aggregates, n)
			Wend
		EndIf
    EndIf

    Return (instance)
EndFunction

Function ForecastDTO:ParseFromJsonString(inStr)
    Return (ForecastDTO:LoadFromTable(JSONLib.Parse(inStr)))
EndFunction
